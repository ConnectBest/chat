name: Build & Push to ECR Public

on:
  push:
    branches: [ "main" ]
    paths:
      - "Dockerfile"
      - "requirements.txt"
      - "app/**"
      - ".github/workflows/ecr-public-push.yml"
  workflow_dispatch: {}

env:
  AWS_REGION: ${{ vars.AWS_REGION }}             # must be us-east-1 for ECR Public auth
  ECR_PUBLIC_ALIAS: ${{ vars.ECR_PUBLIC_ALIAS }} # g6a9d7h6
  ECR_PUBLIC_REPO:  ${{ vars.ECR_PUBLIC_REPO }}  # connectbest
  IMAGE_TAG_SHA: ${{ github.sha }}
  IMAGE_TAG_REF: ${{ github.ref_name }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR Public repository exists
        run: |
          aws ecr-public describe-repositories --repository-names "${ECR_PUBLIC_REPO}" >/dev/null 2>&1 || \
          aws ecr-public create-repository --repository-name "${ECR_PUBLIC_REPO}" >/dev/null

      - name: Login to ECR Public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Compute image URI
        id: prep
        run: |
          echo "IMAGE_URI=public.ecr.aws/${ECR_PUBLIC_ALIAS}/${ECR_PUBLIC_REPO}" >> $GITHUB_OUTPUT

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.prep.outputs.IMAGE_URI }}:latest
            ${{ steps.prep.outputs.IMAGE_URI }}:${{ env.IMAGE_TAG_SHA }}
            ${{ steps.prep.outputs.IMAGE_URI }}:${{ env.IMAGE_TAG_REF }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Output image URIs
        run: |
          echo "Pushed:"
          echo "  ${{ steps.prep.outputs.IMAGE_URI }}:latest"
          echo "  ${{ steps.prep.outputs.IMAGE_URI }}:${{ env.IMAGE_TAG_SHA }}"
          echo "  ${{ steps.prep.outputs.IMAGE_URI }}:${{ env.IMAGE_TAG_REF }}"
